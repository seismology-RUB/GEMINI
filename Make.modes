#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#  This is the generic part of the Makefile. Use this
#  template within each project.
#
#  General definitions
#
bindir = .
obsdir = .
#
F2C = f2c
AR = ar
F2CFLAGS = -f -u 
CFLAGS = -O3 
#-------------------------------------------------------
#  Direcory search
#
vpath %.o $(obsdir)
#-------------------------------------------------------
#  Implicit rule to compile .o files from .f files.
#  Output of f2c stays in directory where .f files are.
#  Substitute .f by .c in dependency and compile target.
#  Then remove .c files.
#  Because of vpath, targets and dependencies need not be
#  in the current directory.
#
%.o: %.f
	$(F2C) $(F2CFLAGS) -d$(dir $<) $<
	$(CC) -c $(CFLAGS) $(dir $<)$*.c -o $(obsdir)/$@
	-rm -f $(dir $<)$*.c
%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $(obsdir)/$@
#--------------------------------------------------------------
#  Object string for linking:
#  Adds object dir as prefix and removes directory part
#  of $^ (all dependencies)
#
obstring = $(addprefix $(obsdir)/,$(notdir $^))
#
#   End of generic part of Makefile
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#  Library paths
#
f2clib = -L/usr/lib -lf2c -lm
#-------------------------------------------------------------
.PHONY:

#--------------------------------------------------------------
OBSGEM = bsint_procs.o sysliq.o stavani.o zetl.o nodes_procs.o \
         sysminors.o layer_procs.o flnm_procs.o earthmodel_procs.o \
         propag.o zelcon.o systor.o
OBSFLM = rootcount.o startr_flmodes.o eigfun_procs.o root_procs.o savemin.o \
         modes_spheroidal.o sphmot.o modes_toroidal.o tormot.o savetor.o
STUFF = sunfortran.o gse20.o stuff.o
WOLIB = tf_cmdline.o trim.o splitstring.o dsplco.o zsplco.o dlocate.o hbutcw.o \
	geo2epi.o bessy0.o bessy1.o bessj0.o bessj1.o ceil.o sft.o causfalt.o \
	pythag.o bessj.o bessy.o hbutrw.o spline_interpol_2p.o locate.o
#----------------------------------------------------------------
#  - create some h-files and f-files from their m4 templates
#    thus one .h file can be used in different programs with
#    varying values of dimensions, type definitions
#  - to change the default settings in the .m4 files say
#    touch *.h.m4
#    make VARNAME=VALUE target
#
NND=800
NSTATT=100
%.h: %.h.m4
	m4 -Dm4_nnd=$(NND) -Dm4_nstatt=$(NSTATT) -Dm4_function_type=\`double\ precision\' \
	   -Dm4_elcon_type=\`double\ precision\' $< > $@
%.f: %.f.m4
	m4 -Dm4_function_type=\`double\ precision\' -DMODES \
	   -Dm4_elcon_type=\`double\ precision\' $< > $@ 
#-------------------------------------------------------------
#  create dependencies on .h-files
#  make.incdep is a Makefile because it is included. Such files are first updated
#  before anything else and make starts from anew including all updated makefiles
#
make.incdep: *.f *.f.m4
	./incdep-wf.sh > make.incdep
-include make.incdep
#----------------------------------------------------------------
#
flmodes: %: %.o $(OBSGEM) $(OBSFLM) $(WOLIB)
	$(CC) -o $(bindir)/$@ $(obstring) $(f2clib)
modeseis: %: %.o modes_potential.o modes_excitation.o add_sph_displ.o add_tor_displ.o seismo_procs.o sar_procs.o $(WOLIB) $(STUFF)
	$(CC) -o $(bindir)/$@ $(obstring) $(f2clib)
